<?php

/**
 * @file
 * Font Squirrel API module file.
 */

use Drupal\fontyourface\Entity\Font;

/**
 * Implements hook_fontyourface_api()
 */
function fontsquirrel_api_fontyourface_api() {
  return [
    'version' => '3',
    'name' => 'Font Squirrel',
  ];
}

/**
 * Implements hook_fontyourface_import().
 */
function fontsquirrel_api_fontyourface_import() {
  // Until we figure out batch api for D8.
  @set_time_limit(3600);

  try {
    $uri = 'https://www.fontsquirrel.com/api/fontlist/all';
    $response = \Drupal::httpClient()->get($uri, ['headers' => ['Accept' => 'text/plain']]);
    $data = json_decode($response->getBody());
  }
  catch (RequestException $e) {
    drupal_set_message(t('There was an error downloading font list from Font Squirrel.'), 'error');
    fontyourface_log('Invalid drupal_http_request response: @response', ['@response' => $e->getMessage()]);
    return FALSE;
  }

  $fonts = [];
  $count = 0;
  foreach ($data as $font_import) {
    $metadata = [
      'id' => $font_import->id,
      'path' => $font_import->family_urlname,
      'font_filename' => $font_import->font_filename,
    ];
    $font = new stdClass();
    $font->name = $font_import->family_name;
    $font->url = 'https://www.fontsquirrel.com/fonts/' . $font_import->family_urlname;
    $font->provider = 'fontsquirrel_api';
    $font->css_family = $font_import->family_urlname . 'regular';
    // Font Squirrel fonts have no concept of normal/bold/light/italics fonts.
    $font->css_weight = 400;
    $font->css_style = 'normal';
    $font->foundry = $font_import->foundry_name;
    $font->foundry_url = 'https://www.fontsquirrel.com/foundry/' . $font_import->foundry_urlname;
    $font->license = 'See Font Squirrel license page';
    $font->license_url = $font->url . '#eula';
    $font->metadata = serialize($metadata);
    if ($font_import->family_count > 1) {
      $variants = fontsquirrel_api_get_font_family_info($font_import);
      foreach ($variants as $key => $variant) {
        $count++;
        $variant_metadata = $metadata;
        $variant_metadata['font_filename'] = $variant->filename;
        $variant_font = clone $font;
        $variant_font->name = $variant->family_name . ' ' . $variant->style_name;
        $variant_font->url = $font->url . '#' . $variant->fontface_name;
        $variant_font->css_family = $variant->fontface_name;
        $variant_font->metadata = serialize($variant_metadata);
        $fonts[] = $variant_font;
        fontyourface_save_font($variant_font);
      }
    }
    else {
      $count++;
      $fonts[] = $font;
      fontyourface_save_font($font);
    }
  }
  if ($count) {
    drupal_set_message(t("@count fonts (and variants) imported from Font Squirrel", ['@count' => $count]));
  }
}

function fontsquirrel_api_get_font_family_info($font_import) {
  try {
    $uri = 'http://www.fontsquirrel.com/api/familyinfo/' . $font_import->family_urlname;
    $response = \Drupal::httpClient()->get($uri, ['headers' => ['Accept' => 'text/plain']]);
    $data = json_decode($response->getBody());
  }
  catch (RequestException $e) {
    drupal_set_message(t('There was an error downloading font list from Font Squirrel.'), 'error');
    fontyourface_log('Invalid drupal_http_request response: @response', ['@response' => $e->getMessage()]);
    return FALSE;
  }
  return $data;
}